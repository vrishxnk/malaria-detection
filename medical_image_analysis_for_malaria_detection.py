# -*- coding: utf-8 -*-
"""Medical Image Analysis for Malaria Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wb4e0J2VnuTW8AJ-Vcau9xeTczEI5O1n
"""

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext autoreload
# %autoreload 2
# %matplotlib inline

from fastai.vision import *
from fastai.metrics import error_rate
from fastai.callbacks import SaveModelCallback
from shutil import copyfile
import matplotlib.pyplot as plt
import operator
from PIL import Image
from sys import intern

def exportStageTo(learn, path):
    learn.export()
    copyfile(path/'export.pkl', path/'export-malaria.pkl')

def restoreStageFrom(path):
  copyfile(path/'export-malaria.pkl', path/'export.pkl')
  return load_learner(path)

!wget  --backups=1 -q https://ceb.nlm.nih.gov/proj/malaria/cell_images.zip
!wget  --backups=1 -q https://ceb.nlm.nih.gov/proj/malaria#/malaria_cell_classification_code.zip
!ls -al

!unzip cell_images.zip

!mv cell_images train
!mkdir data
!mv train data

!apt install tree

!tree ./data --dirsfirst --filelimit 10

bs = 256
size = 128     
path = Path("./data")

tfms = get_transforms(max_rotate=None, max_warp=None, max_zoom=1.0)
data = ImageDataBunch.from_folder(path, ds_tfms=tfms, size=size, resize_method=ResizeMethod.SQUISH, valid_pct = 0.2, bs=bs)
print('Transforms = ', len(tfms))
data.save('imageDataBunch-bs-'+str(bs)+'-size-'+str(size)+'.pkl')
print(data.classes)
data

data.show_batch(rows=3, figsize=(10,10))

learn = cnn_learner(data, models.resnet34, metrics=error_rate)
learn.model

learn.fit_one_cycle(5, callbacks=[SaveModelCallback(learn, every='epoch', monitor='accuracy', name='malaria-1')])
learn.save('malaria-stage-1')
exportStageTo(learn, path)

interp = ClassificationInterpretation.from_learner(learn)
losses,idxs = interp.top_losses()
len(data.valid_ds)==len(losses)==len(idxs)

interp.plot_top_losses(9, figsize=(11,11), heatmap=True)

interp.plot_confusion_matrix(figsize=(4,4), dpi=100)

